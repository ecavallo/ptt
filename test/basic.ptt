--------------------------------------------------------------------------------
-- Very basic tests
--------------------------------------------------------------------------------

let fun_id : (A : U<0>) (B : A -> U<0>) -> ((x : A) -> B x) -> ((x : A) -> B x) =
  fun A B f -> f

normalize def fun_id

let swap : (A : [_ _] U<0>) -> ([x y] (A @ x @ y)) -> ([x y] (A @ y @ x)) =
  fun A sq -> bri x y -> sq @ y @ x

normalize def swap

-- Should not check
-- let diagonal : (A : U<0>) (p : [x y] A) -> ([x] A) =
--   fun A p -> bri x -> p @ x @ x
