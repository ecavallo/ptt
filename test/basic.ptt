--------------------------------------------------------------------------------
-- Very basic tests
--------------------------------------------------------------------------------

let fun_id : (A : U<0>) (B : A -> U<0>) -> ((x : A) -> B x) -> ((x : A) -> B x) =
  fun A B f -> f

normalize def fun_id

let swap : (A : [_] [_] U<0> {*; *} {*; *})
  -> (sq : [x] [y] A @ x @ y {*; *} {*; *})
  -> ([x] [y] A @ y @ x {sq @ 0 @ x; sq @ 1 @ x} {bri y -> sq @ y @ 0; bri y -> sq @ y @ 1})
  =
  fun A sq -> bri x y -> sq @ y @ x

normalize def swap

-- Should not check
-- let diagonal : (A : U<0>) (p : [x] [y] A {*; *} {*; *}) -> ([x] A {p @ 0 @ 0; p @ 1 @ 1}) =
--   fun A p -> bri x -> p @ x @ x
